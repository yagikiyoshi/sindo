package solver;

/**
 * Gives an access to the solver classes. <br>
 * The current version provides, <br>
 * <blockquote><ol>
 * <li> MatrixOperation with JAMA (default) </li>
 * <li> Diagonalizer with JAMA (default) </li>
 * <li> SVD (singular value decomposition) with JAMA (default) </li>
 * </ol></blockquote>
 * <p> The instance is generated by a getter as,  </p>
 * <blockquote><pre>
 *    Diagonalizer solver = Solver.getDiagonalizer(Solver.JAMA);
 * </pre></blockquote>
 * and in a similar way for other routines.
 * 
 * @author Kiyoshi Yagi
 * @version 1.1
 * @since Sindo 3.0
 * @see Diagonalizer MatrixOperation SVD
 */
public class Solver {
   
   private static String defaultSolver = "jama";
   
   /**
    * Key to specify JAMA as a solver routine
    */
   public static String JAMA = "jama";

   /**
    * Returns the default diagonalizer
    * @return Diagonalizer
    */
   public static Diagonalizer getDiagonalizer(){
      return Solver.getDiagonalizer(defaultSolver);
   }
   
   /**
    * Returns the diagonalizer
    * @param type The specification of library  (Solver.JAMA) 
    * @return Diagonalizer
    */
   public static Diagonalizer getDiagonalizer(String type){
      Diagonalizer diag = null;
      if(type.equalsIgnoreCase("jama")){
         diag = new DiagonalizerJama();
      }
      return diag;
   }

   /**
    * Returns the default routine for singular value decomposition
    * @return SVD
    */
   public static SVD getSVD(){
      return Solver.getSVD(defaultSolver);
   }
   
   /**
    * Returns the routine for singular value decomposition
    * @param type THe specification of library (Solver.JAMA)
    * @return SVD
    */
   public static SVD getSVD(String type){
      SVD svd = null;
      if(type.equalsIgnoreCase("jama")){
         svd = new SVDJama();
      }
      return svd;
   }
   
   /**
    * Returns the default routine for matrix operations
    * @return MatrixOperation
    */
   public static MatrixOperation getMatrixOperation(){
      return Solver.getMatrixOperation(defaultSolver);
   }
   
   /**
    * Returns the routine for matrix operations
    * @param type The specification of library (Solver.JAMA)
    * @return MatrixOperation
    */
   public static MatrixOperation getMatrixOperation(String type){
      MatrixOperation matop = null;
      if(type.equalsIgnoreCase("jama")){
         matop = new MatrixOperationJama();
      }
      return matop;
   }

}
